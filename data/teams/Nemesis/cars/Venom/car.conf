#
#motor+gearbox:
#

#how much torque (by rotation speed, unit: Nm*rad/s)
power 1500000


#there are two motor+gear combination alternatives:
# * continuously variable: full usage of power, decreasing torque by velocity
# * electric motor: power usage increases by velocity, constant torque (until max velocity)

#only for normal, continuously variable, option:
#if rotation goes under this level, will not get more torque
gear_limit 1 #gearbox only operational above this rad/s

#only for electric motor option: (enabled by setting this to non-zero)
#constant torque until power usage exceeds motor_power
electric_torque 0 #0=normal (continuously variable) motor+gearbox


#limit torque on wheels if in air (motor+breaks)
#(used to prevent car from flipping over when leaving ground)
air_torque_limit 500 #inf to disable

#distribution of motor between front and back
#(set both true for 4WD)
motor_distribution false true #only rear driving

#differential: even distribution of motor torque over wheels
#(disable this to get one (weaker) motor+gearbox for each wheel)
differential true

#redistributes torque over wheels based on how their velocity differ
#(like a "limited slip differential", but supports all wheels)
torque_redistribution false true #adjust rear wheels to each others

#allow different velocity based on turning
adaptive_redistribution false

#how quickly the differing velocity should be fixed
redistribution_force 100



#
#breaks:
#

#breaking force
max_break 40000 #for soft breaks, drifting is always inf

#distribution of breaks between back and front
#(drifting breaks are not affected - always locks rear wheels)
break_distribution 0.5 #breaking %50 front and back

#this is guaranteed to completely lock the rear wheels
#(only good when wheel mass is much lower than car mass)
handbreak_lock true



#
#steering:
#

#max steering
max_steer 35 #degrees

#distribution of steering between back and front
steer_distribution 1 #100% front wheel steering

#how much the turning is decreased by car velocity
steer_decrease 0.005 #(0 = disabled)

#but never decrease turning more than this
min_decreased_steer 2 #degrees

#change maximum steering this fast
steer_limit_speed 100 #degrees per second

#differnt turn on inner/outer wheels when turning
adaptive_steering true

#toe in/out for front and rear wheel pairs in degrees
toe 0 0


#
#car properties:
#

body_mass 4000 #in kg
body_mass_position 0 #position of mass relative to center of car
body 2.6 5.8 0.7 #mass positioning (should be similar to geometrical shape)
wheel_mass 30 #in kg

#wheel suspension
suspension_spring 200000.0
suspension_damping 20000.0

#values for calculating air (and water) drag/friction:
body_linear_drag 3 1 5 #X (sideways), Y (forward/backward) and Z (up/down)
body_angular_drag 20
wheel_linear_drag 0
wheel_angular_drag 0.1


#tyre properties:
wheel_spring 400000 #newtons per meter of tyre compresion
wheel_damping 1000 #damping of spring force from above

#how much breaking torque on wheels (for each kN of normal force)
rolling_resistance 0.1

#determine if part of wheel is tyre or rim
rim_angle 50 #degrees of tilting before rim is colliding
rim_mu 0.1 #friction on (metal) sides of wheel

#friction (mu) values for tyre:
#plotting of these curves can be done using gnuplot:
#set xrange [0:90]
#set yrange [0:1]
#plot sin(shape*atan(tan(pi/2/shape)*(x/position)**(position*sharpness/tan(pi/2/shape))))

#along wheel direction (x)
#max mu and decrease of mu as Fz increases
tyre.x:peak 2.2 0.0 #max friction peak (with mu=1.5) at 30kN load
#tyre.x:peak 4.0 -0.0001
tyre.x:peak 4.4 -0.00012

#(all other "second values" are used as: value1*Fz^value2)
#how much the peak will decrease (sin(90*shape) of peak)
tyre.x:shape 1.75
#at how much slip peak is reached and how much affected by normal force
tyre.x:position 0.1 0
#how sharp the peak will be (use plotting software to grasp this)
tyre.x:sharpness 18 0


#sideways (y)
#(same as x)
#tyre.y:peak 2.2 0.0
#2.5 -0.00002
#tyre.y:peak 4.0 -0.0001
tyre.y:peak 4.4 -0.00012
tyre.y:shape 1.5
tyre.y:position 2 0
tyre.y:sharpness 0.8 0
#how much tilting of wheel increases/decreases mu by Fz
tyre.y:shift 0.00001 #0=not used (mu + 0*tilt*Fz = mu)



#
#car model (for rendering):
#

model Venom.obj
#defaults:
model:resize 1
model:rotate 0 0 0
model:offset 0 0 0


#debug values for disabling/enabling certain features:
debug:turn true #turn steering wheels (if disabled, look at adapt. redist.)
debug:gyroscopic true #gyroscopic effect on wheels
debug:contactapprox1 true #friction affected by load (normal force, Fz)
debug:fixedmu 0 #disable not-so-magic equation, use fixed mu (0=diabled)
#increase (by velocity^2 and air density), max, and antigravity/downforce ratio
debug:downforce 20 40000 0.5


#....finally: some important values that have not been decided yet:
w 1.25 1.4 #radius and width for wheels
wp 2.4 1.8 #x and y offset positions for wheels
jx 2.05 #x offset position for wheel steering joints
s 4.8 3.6 1.6 1.25 #xyz and z offset for "which-side-towards-ground" sensors

